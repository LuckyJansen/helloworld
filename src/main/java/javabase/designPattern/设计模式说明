设计模式：
23种：
创建型模式5种：工厂方法模式、单例模式；
结构型模式7种：适配器模式、代理模式；
行为型模式11种：策略模式、观察者模式。

要能手写以上6种重要的设计模式。

六大原则：
总原则-开闭原则：对修改关闭对扩展开放；
1.单一职责原则
2.里氏替换原则
3.依赖倒转原则
4.接口隔离原则
5.迪米特原则
6.合成复用原则

单例设计模式：
    目的：创建全局唯一的实例对象；
    饿汉模式：类加载的时候就创建对象
    懒汉模式：需要的时候才创建对象

装饰者设计模式：
    目的：当你需要对某一个类的某一个功能进行增强的时候
    注意两点：1.将要包装的类作为增强类的属性；2.实现增强功能。
    装饰者用的最多的地方就是功能增强。

代理模式：
    静态代理：1.代理对象与原对象实现同一个接口；2.将原对象作为属性传入代理对象。
    动态代理：java自带的，1.实现一个接口InvocationHandler;2.将代理对象作为属性传入;3.实现
    代理用的最多的地方就是权限认证、日志打印、错误预警。